run(OPA2Template.R)
source("/Users/dkswogus7530/Desktop/OPA2Template.R")
source("/Users/dkswogus7530/Desktop/OPA3communityTemplate.R")
l
source("/Users/dkswogus7530/Desktop/OPA3communityTemplate.R")
list(rep(1,4), rep(2,3), rep(3,2), rep(4,1))
mapply(rep,1:4, 4:1)
debug(lm)
n
traceback(lm)
cube <- function (x, n) {}
cube <- function (x, n) { x^3}
cube(3)
pow <- function (x, n) { x^n}
pow()
x <- 1:10
if(x > 5) { x <- 0}
library(datasets)
data(iris)
?iris
Sepal.Length
iris
mean(iris$Sepal.Length)
colMeans(iris)
rowMeans(iris[,1:4])
apply(iris, 1, mean)
apply(iris, 2, mean)
apply(iris[,1:4], 1, mean)
colMeans(iris)
apply(iris,1,mean)
rowMeans(iris[,1:3])
rowMeans(iris[,1:4])
apply(iris[, 1:4], 2, mean)
iris
newdata <-subset(iris, virginica)
newdata <-subset(iris, iris$virginica)
newdata <-subset(iris, Species == virginica)
newdata <-subset(iris, Species = virginica)
newdata
newdata <-subset(iris, Species == virginica)
iris[,4]
iris[,species
;
]
iris$Species
iris$Species == virginica
iris$Species
newdata <- subset(iris, Species == "virginica")
newdata
mean(newdata$Sepal.Length)
?mtcars
mtcars
mean(mtcars$mpg, mtcars$cyl)
split(mtcars, mtcars$cyl)
sapply(mtcars, cyl, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
t <- tapply(mtcars$mpg, mtcars$cyl, mean)
abs(t[1] - t[3])
f <- function(x) {#
        g <- function(y) {#
                y + z#
        }#
        z <- 4#
        x + g(x)#
}
f
z <- 10
f(3)
debug(ls)
ls
pow <- function(x = 4, n = 3) {#
        x^n#
}
pow()
tapply(mtcars$mpg, mtcars$cyl, mean)
26.66364 - 15.10000
mtcars
tapply(mtcars$hp, mtcars$cyl, mean)
t <- tapply(mtcars$hp, mtcars$cyl, mean)
abs(t[1] - t[3])
source("http://spark-public.s3.amazonaws.com/compdata/scripts/getmonitor-test.R")
getmonitor.testscript()
exit
?png
?serialize
?xfig
?windows
?windows
?jpeg
?xfig
?points
?jpeg
?jpeg
?bwplot
?histogram
?xyplot
library(windows)
?hist
?base
library(help ="base")
?hist
library(base)
?hist
?bwplot
?historgram
?xyplot
library(ggplot2)
?mtext
?par
?lattice
??lattice
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
?lmline
??lmline
?? panel.abline
??panel.abline
plot(0, 0, main = expression("theta")
plot(0, 0, main = expression("theta")
plot(0, 0, main = expression("theta"))
plot(0, 0, main = expression("theta"))
plot(0, 0, main = expression(theta))
set.seed(1)
rpois(5,2)
?xfig
?pch
?pdf
?quartz
?splom
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
head(outcome)
head(outcome)
clr
clean
clean()
clr()
clear()
ncol(outcome)
names(outcome)
outcome[,11] <- as.numeric(outcome[,11])
hist(outcome[,11])
hist(outcome[,11])
title("hello")
title("hello world")
hist(outcome[,11])
hist(outcome,"hello")
title(outcome,"hello")
hist(outcome[,11])
title("30 days heart attack")
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outcome[, 11] <- as.numeric(outcome[, 11])
table(outcome$State)
death <-outcome2[,11]
outcome2 <- subset(outcome$State < 20)
outcome2 <- subset(outcome, State < 20)
death <- outcome2[,11]
state <- outcome2$State
boxplot(death ~ state)
source(../best.R)
source(""../best.R")
source("../best.R")
best("TX","heart attack")
best("TX","heart attack")
source("../best.R")
best("TX","heart attack")
best("TX","heart failure")
source("http://spark-public.s3.amazonaws.com/compdata/scripts/submitscript.R")
source("submitscript.R")
source("submitscript.R")
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()8
submit()
submit()
submit()
